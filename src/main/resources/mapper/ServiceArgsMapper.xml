<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.shelltest.service.mapper.ServiceArgsMapper" >
  <resultMap id="BaseResultMap" type="org.shelltest.service.entity.ServiceArgs" >
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="application" property="application" jdbcType="VARCHAR" />
    <result column="server" property="server" jdbcType="VARCHAR" />
    <result column="args" property="args" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `file`, `application`, `server`, `args`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.shelltest.service.entity.ServiceArgsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deploy_service_args
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="getArgsWithDefault" resultType="java.lang.String" >
    select `args`
    from deploy_service_args
    where  `file` = #{filename} and `server` in ('default',#{serverIP})
    order by `server` desc
  </select>

  <select id="getAppNameListWithDefault" resultMap="BaseResultMap" >
    select DISTINCT `file`,`application`
    from deploy_service_args
    where `server` in (#{serverIP},'default')
    order by `server` asc
  </select>

  <delete id="deleteByExample" parameterType="org.shelltest.service.entity.ServiceArgsExample" >
    delete from deploy_service_args
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.shelltest.service.entity.ServiceArgs" >
    insert into deploy_service_args (`file`, `application`, `server`, 
      `args`)
    values (#{file,jdbcType=VARCHAR}, #{application,jdbcType=VARCHAR}, #{server,jdbcType=VARCHAR}, 
      #{args,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.shelltest.service.entity.ServiceArgs" >
    insert into deploy_service_args
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="file != null" >
        `file`,
      </if>
      <if test="application != null" >
        `application`,
      </if>
      <if test="server != null" >
        `server`,
      </if>
      <if test="args != null" >
        `args`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="file != null" >
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="server != null" >
        #{server,jdbcType=VARCHAR},
      </if>
      <if test="args != null" >
        #{args,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.shelltest.service.entity.ServiceArgsExample" resultType="java.lang.Integer" >
    select count(*) from deploy_service_args
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deploy_service_args
    <set >
      <if test="record.file != null" >
        `file` = #{record.file,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null" >
        `application` = #{record.application,jdbcType=VARCHAR},
      </if>
      <if test="record.server != null" >
        `server` = #{record.server,jdbcType=VARCHAR},
      </if>
      <if test="record.args != null" >
        `args` = #{record.args,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deploy_service_args
    set `file` = #{record.file,jdbcType=VARCHAR},
      `application` = #{record.application,jdbcType=VARCHAR},
      `server` = #{record.server,jdbcType=VARCHAR},
      `args` = #{record.args,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>