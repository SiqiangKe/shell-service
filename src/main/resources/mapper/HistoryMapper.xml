<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.shelltest.service.mapper.HistoryMapper" >
  <resultMap id="BaseResultMap" type="org.shelltest.service.entity.History" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="target" property="target" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_read" property="isRead" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.shelltest.service.entity.History" extends="BaseResultMap" >
    <result column="result" property="result" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="StatisticResultMap" type="org.shelltest.service.dto.StatisticEntity">
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `message_id`, `user`, `ip`, `target`, `start_time`, `end_time`, `is_read`
  </sql>
  <sql id="Blob_Column_List" >
    `result`
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="org.shelltest.service.entity.HistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deploy_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.shelltest.service.entity.HistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deploy_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deploy_history
    where `message_id` = #{messageId,jdbcType=INTEGER}
  </select>

  <!--limit及排序-->
  <select id="selectNotRead" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deploy_history
    where `is_read` = '0' order by `message_id` desc limit #{limit,jdbcType=INTEGER}
  </select>
  <select id="selectAlreadyRead" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deploy_history
    where `is_read` = '1' order by `message_id` desc limit #{limit,jdbcType=INTEGER}
  </select>
  <select id="selectMessage" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deploy_history order by `message_id` desc limit #{limit,jdbcType=INTEGER}
  </select>

  <select id="getStatisticList" resultMap="StatisticResultMap">
    SELECT DATE(start_time) AS `date`,count(0) AS `rate`
    FROM `deploy_history`
    WHERE DATE(start_time) &gt;= #{from} AND DATE(start_time) &lt;= #{to}
    GROUP BY `date`
    ORDER BY `date`
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deploy_history
    where `message_id` = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.shelltest.service.entity.HistoryExample" >
    delete from deploy_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.shelltest.service.entity.History" >
    insert into deploy_history (`message_id`, `user`, `ip`,
      `target`, `start_time`, `end_time`,
      `is_read`, `result`)
    values (#{messageId,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},
      #{target,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{isRead,jdbcType=CHAR}, #{result,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.shelltest.service.entity.History" >
    insert into deploy_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        `message_id`,
      </if>
      <if test="user != null" >
        `user`,
      </if>
      <if test="ip != null" >
        `ip`,
      </if>
      <if test="target != null" >
        `target`,
      </if>
      <if test="startTime != null" >
        `start_time`,
      </if>
      <if test="endTime != null" >
        `end_time`,
      </if>
      <if test="isRead != null" >
        `is_read`,
      </if>
      <if test="result != null" >
        `result`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="target != null" >
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=CHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.shelltest.service.entity.HistoryExample" resultType="java.lang.Integer" >
    select count(*) from deploy_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deploy_history
    <set >
      <if test="record.messageId != null" >
        `message_id` = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.user != null" >
        `user` = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        `ip` = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.target != null" >
        `target` = #{record.target,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        `start_time` = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        `end_time` = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRead != null" >
        `is_read` = #{record.isRead,jdbcType=CHAR},
      </if>
      <if test="record.result != null" >
        `result` = #{record.result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update deploy_history
    set `message_id` = #{record.messageId,jdbcType=INTEGER},
      `user` = #{record.user,jdbcType=VARCHAR},
      `ip` = #{record.ip,jdbcType=VARCHAR},
      `target` = #{record.target,jdbcType=VARCHAR},
      `start_time` = #{record.startTime,jdbcType=TIMESTAMP},
      `end_time` = #{record.endTime,jdbcType=TIMESTAMP},
      `is_read` = #{record.isRead,jdbcType=CHAR},
      `result` = #{record.result,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deploy_history
    set `message_id` = #{record.messageId,jdbcType=INTEGER},
      `user` = #{record.user,jdbcType=VARCHAR},
      `ip` = #{record.ip,jdbcType=VARCHAR},
      `target` = #{record.target,jdbcType=VARCHAR},
      `start_time` = #{record.startTime,jdbcType=TIMESTAMP},
      `end_time` = #{record.endTime,jdbcType=TIMESTAMP},
      `is_read` = #{record.isRead,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.shelltest.service.entity.History" >
    update deploy_history
    <set >
      <if test="user != null" >
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        `ip` = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="target != null" >
        `target` = #{target,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        `start_time` = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        `end_time` = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null" >
        `is_read` = #{isRead,jdbcType=CHAR},
      </if>
      <if test="result != null" >
        `result` = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `message_id` = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.shelltest.service.entity.History" >
    update deploy_history
    set `user` = #{user,jdbcType=VARCHAR},
      `ip` = #{ip,jdbcType=VARCHAR},
      `target` = #{target,jdbcType=VARCHAR},
      `start_time` = #{startTime,jdbcType=TIMESTAMP},
      `end_time` = #{endTime,jdbcType=TIMESTAMP},
      `is_read` = #{isRead,jdbcType=CHAR},
      `result` = #{result,jdbcType=LONGVARCHAR}
    where `message_id` = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.shelltest.service.entity.History" >
    update deploy_history
    set `user` = #{user,jdbcType=VARCHAR},
      `ip` = #{ip,jdbcType=VARCHAR},
      `target` = #{target,jdbcType=VARCHAR},
      `start_time` = #{startTime,jdbcType=TIMESTAMP},
      `end_time` = #{endTime,jdbcType=TIMESTAMP},
      `is_read` = #{isRead,jdbcType=CHAR}
    where `message_id` = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>
